<?xml version="1.0" encoding="utf-8"?>
<EventBindingSet id="Explorer_eventbinding" xmlns="http://www.br-automation.com/iat2014/eventbinding/v2" xmlns:types="http://www.br-automation.com/iat2015/widgetTypes/v2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<Bindings>
		<!-- Refresh directory data when page is loaded />-->
		<EventBinding>
			<Source xsi:type="clientSystem.Event" event="ContentLoaded" />
			<EventHandler condition="contentId=&quot;contentInfoSample&quot;" >
				<Sequence>
					<Step order="0">
						<Action>
							<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[0].refresh" >
								<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
							</Target>
						</Action>
					</Step>
					<Step order="1">
						<Action>
							<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[1].refresh" >
								<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
							</Target>
						</Action>
					</Step>
				</Sequence>
			</EventHandler>
		</EventBinding>
		
		<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// />-->
		
		<!-- Directory change with double click on table />-->
		<EventBinding id="contentExplorer.tblDirectoryA.Click">
			<Source contentRefId="contentExplorer" widgetRefId="tblDirectoryA" xsi:type="widgets.brease.Table.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.VIS[0].double_click_dir_change" >
						<Method xsi:type="opcUa.NodeAction.AddValue" value="1" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>

		<!-- Refresh files on side A when new device was selected />-->
		<EventBinding id="contentExplorer.ddbDeviceA.SelectedIndexChanged">
			<Source contentRefId="contentExplorer" widgetRefId="ddbDeviceA" xsi:type="widgets.brease.DropDownBox.Event" event="SelectedIndexChanged" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[0].refresh" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
		
		<!-- Refresh files on side A />-->
		<EventBinding id="contentExplorer.btnRefreshA.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnRefreshA" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[0].refresh" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
					
		<!-- Delete file or directory on side A />-->
		<EventBinding id="contentExplorer.btnDeleteA.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnDeleteA" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[0].delete" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
		
		<!-- Copy file or directory on side A to B />-->
		<EventBinding id="contentExplorer.btnCopyA.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnCopyA" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[0].copy" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
		
		<!-- Copy all files on side A to B />-->
		<EventBinding id="contentExplorer.btnCopyAllA.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnCopyAllA" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[0].copyall" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
		
		<!-- Create new folder on side A />-->
		<EventBinding id="contentExplorer.btnDirCreateA.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnDirCreateA" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[0].dir_create" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>

		<!-- ///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////// />-->
		
		<!-- Directory change with double click on table />-->
		<EventBinding id="contentExplorer.tblDirectoryB.Click">
			<Source contentRefId="contentExplorer" widgetRefId="tblDirectoryB" xsi:type="widgets.brease.Table.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.VIS[1].double_click_dir_change" >
						<Method xsi:type="opcUa.NodeAction.AddValue" value="1" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
		
		<!-- Refresh files on side A when new device was selected />-->
		<EventBinding id="contentExplorer.ddbDeviceB.SelectedIndexChanged">
			<Source contentRefId="contentExplorer" widgetRefId="ddbDeviceB" xsi:type="widgets.brease.DropDownBox.Event" event="SelectedIndexChanged" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[1].refresh" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>

		<!-- Refresh files on side B />-->
		<EventBinding id="contentExplorer.btnRefreshB.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnRefreshB" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[1].refresh" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
	
		<!-- Delete file or directory on side B />-->
		<EventBinding id="contentExplorer.btnDeleteB.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnDeleteB" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[1].delete" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
		
		<!-- Copy file or directory on side B to A />-->
		<EventBinding id="contentExplorer.btnCopyB.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnCopyB" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[1].copy" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
		
		<!-- Copy all files on side B to A />-->
		<EventBinding id="contentExplorer.btnCopyAllB.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnCopyAllB" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[1].copyall" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
		
		<!-- Create new folder on side B />-->
		<EventBinding id="contentExplorer.btnDirCreateB.Click">
			<Source contentRefId="contentExplorer" widgetRefId="btnDirCreateB" xsi:type="widgets.brease.Button.Event" event="Click" />
			<EventHandler>
				<Action>
					<Target xsi:type="opcUa.NodeAction" refId="::AsGlobalPV:EXPL.CMD[1].dir_create" >
						<Method xsi:type="opcUa.NodeAction.SetValueBool" value="true" />
					</Target>
				</Action>
			</EventHandler>
		</EventBinding>
	</Bindings>
</EventBindingSet>
